{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","heading","value","placeholder","onChange","event","console","log","target","rows","newText","toUpperCase","showAlert","toLowerCase","trim","charAt","slice","document","getElementById","select","navigator","clipboard","writeText","split","join","length","Alert","alert","role","word","lower","capitalize","msg","App","setMode","setAlert","message","setTimeout","body","style","backgroundColor","color","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"oMAGe,SAASA,EAAOC,GAC3B,OACI,8BACG,qBAAKC,UAAS,yCAAoCD,EAAME,KAA1C,eAAqDF,EAAME,MAAzE,SACL,sBAAKD,UAAU,kBAAf,UACE,mBAAGA,UAAU,eAAeE,KAAK,IAAjC,SAAsCH,EAAMI,QAG5C,wBAAQH,UAAU,iBAAiBI,KAAK,SAAS,iBAAe,WAAW,iBAAe,0BAA0B,gBAAc,yBAAyB,gBAAc,QAAQ,aAAW,oBAA5L,SACE,sBAAMJ,UAAU,0BAElB,sBAAKA,UAAU,2BAA2BK,GAAG,yBAA7C,UACE,oBAAIL,UAAU,kCAAd,SACE,oBAAIA,UAAU,WAAd,SACE,mBAAGA,UAAU,kBAAkB,eAAa,OAAOE,KAAK,IAAxD,sBAYJ,sBAAKF,UAAS,sCAA8C,UAAbD,EAAME,KAAe,OAAO,SAA3E,UACE,uBAAOD,UAAU,mBAAmBM,QAASP,EAAMQ,WAAYH,KAAK,WAAWC,GAAG,2BAClF,uBAAOL,UAAU,mBAAmBQ,QAAQ,yBAA5C,2CC5BG,SAASC,EAASV,GAC7B,IAsDA,EAAwBW,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,OACI,qCACA,sBAAKZ,UAAU,YAAf,UACI,6BAAKD,EAAMc,UACX,qBAAKb,UAAU,OAAf,SAEI,0BAAUA,UAAU,eAAec,MAAOH,EAAMI,YAAY,mBAAmBC,SAXnE,SAACC,GACrBC,QAAQC,IAAI,cACZP,EAAQK,EAAMG,OAAON,QAS4FT,GAAG,QAAQgB,KAAK,QAE7H,wBAAQrB,UAAU,4BAA4BM,QA/DhC,WAClBY,QAAQC,IAAI,0BAA4BR,GACxC,IAAIW,EAAUX,EAAKY,cACnBX,EAAQU,GACRvB,EAAMyB,UAAU,0BAA0B,YA2DtC,mCACA,wBAAQxB,UAAU,4BAA4BM,QA1DhC,WAClBY,QAAQC,IAAI,0BAA4BR,GACxC,IAAIW,EAAUX,EAAKc,cACnBb,EAAQU,GACRvB,EAAMyB,UAAU,0BAA0B,YAsDtC,mCACA,wBAAQxB,UAAU,4BAA4BM,QA7C9B,WACpBY,QAAQC,IAAI,0BAA4BR,GACxC,IAAIW,EAAUX,EAAKe,OACnBd,EAAQU,GACRvB,EAAMyB,UAAU,oBAAoB,YAyChC,wBACA,wBAAQxB,UAAU,4BAA4BM,QAvCnC,WAEf,IACIgB,EADYX,EAAKgB,OAAO,GACLJ,cACvBX,EAAQU,EAAQX,EAAKiB,MAAM,IAC3B7B,EAAMyB,UAAU,2BAA2B,YAkCvC,yBACA,wBAAQxB,UAAU,4BAA4BM,QA/BnC,WACf,IAAIK,EAAOkB,SAASC,eAAe,SACnCnB,EAAKoB,SACLC,UAAUC,UAAUC,UAAUvB,EAAKG,OACnCf,EAAMyB,UAAU,uBAAuB,YA2BnC,wBACA,wBAAQxB,UAAU,4BAA4BM,QAxB5B,WACtB,IAAIgB,EAAUX,EAAKwB,MAAM,QACzBvB,EAAQU,EAAQc,KAAK,MACrBrC,EAAMyB,UAAU,wBAAwB,YAqBpC,kCACA,wBAAQxB,UAAU,4BAA4BM,QAxD7B,WACrBY,QAAQC,IAAI,2BAA6BR,GAEzCC,EADc,IAEdb,EAAMyB,UAAU,WAAW,YAoDvB,4BAGJ,sBAAKxB,UAAU,iBAAf,UACI,mDACA,8BAAIW,EAAKwB,MAAM,KAAKE,OAAS,EAA7B,cAA2C1B,EAAK0B,OAAhD,iBACA,8BAAI,KAAQ1B,EAAKwB,MAAM,KAAKE,OAA5B,0BACA,yCACA,4BAAI1B,EAAK0B,OAAO,EAAE1B,EAAK,8CC9DpB2B,MAhBf,SAAevC,GAMX,OACIA,EAAMwC,OAAS,8BACV,sBAAKvC,UAAS,sBAAiBD,EAAMwC,MAAMnC,KAA7B,iCAAkEoC,KAAM,QAAtF,UACG,mCARW,SAACC,GACpB,IAAMC,EAAQD,EAAKhB,cACnB,OAAOiB,EAAMf,OAAO,GAAGJ,cAAgBmB,EAAMd,MAAM,GAMjCe,CAAW5C,EAAMwC,MAAMnC,MAAjC,OADH,MACwDL,EAAMwC,MAAMK,UCyElEC,MAxEf,WACE,MAAwBnC,mBAAS,SAAjC,mBAAOT,EAAP,KAAa6C,EAAb,KACA,EAA0BpC,mBAAS,MAAnC,mBAAO6B,EAAP,KAAcQ,EAAd,KAEIvB,EAAY,SAACwB,EAAS5C,GAC1B2C,EAAS,CACPH,IAAKI,EACL5C,KAAMA,IAER6C,YAAW,WACTF,EAAS,QACR,OA2BH,OACA,qCAID,cAACjD,EAAD,CAAQK,MAAM,YAAYF,KAAMA,EAAMM,WA7BlB,WACP,UAAPN,GACD6C,EAAS,QACTjB,SAASqB,KAAKC,MAAMC,gBAAkB,QACtCvB,SAASqB,KAAKC,MAAME,MAAQ,QAC5B7B,EAAU,6BAA6B,YACvCK,SAAS1B,MAAQ,0BAWjB2C,EAAS,SACTjB,SAASqB,KAAKC,MAAMC,gBAAkB,QACtCvB,SAASqB,KAAKC,MAAME,MAAQ,QAC5B7B,EAAU,8BAA8B,YACxCK,SAAS1B,MAAQ,6BAWtB,cAAC,EAAD,CAAOoC,MAAOA,IAEf,qBAAKvC,UAAU,iBAAf,SAWY,cAACS,EAAD,CAAUI,QAAQ,6CAA6CW,UAAWA,UC5DvE8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFpC,SAASC,eAAe,SAM1BwB,K","file":"static/js/main.18177a9d.chunk.js","sourcesContent":["import React from 'react'\r\n// import { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <div>\r\n           <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n        {/* <a className=\"navbar-brand\" href=\"/\">{props.title}</a> */}\r\n        {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n              {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n            </li>\r\n            {/* <li className=\"nav-item\"> */}\r\n              {/* <Link className=\"nav-link\" to=\"/about\">About</Link> */}\r\n            {/* </li> */}\r\n            \r\n          </ul>\r\n          {/* <form className=\"d-flex\">\r\n            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n            <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n          </form> */}\r\n          <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n        </div>\r\n    )\r\n}\r\n","import React ,{useState} from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = ()=>{\r\n        console.log(\" Uppercase was clicked.\" + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Uppercase.\",\"Success\");\r\n    }\r\n    const handleLoClick = ()=>{\r\n        console.log(\" Lowercase was clicked.\" + text);\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Lowercase.\",\"Success\");\r\n\r\n    }\r\n    const handleClearClick = ()=>{\r\n        console.log(\" Clear Text was clicked.\" + text);\r\n        let newText = '';\r\n        setText(newText);\r\n        props.showAlert(\"Cleared.\",\"Success\");\r\n\r\n    }\r\n    const handleTrimClick = ()=>{\r\n        console.log(\" Trim Text was clicked.\" + text);\r\n        let newText = text.trim();\r\n        setText(newText);\r\n        props.showAlert(\"Trim was Applied.\",\"Success\");\r\n\r\n    }\r\n    const capitalize = () => {\r\n        \r\n        let firstchar = text.charAt(0); // storing the first char of the string\r\n        let newText= firstchar.toUpperCase(); // converting that to uppercase\r\n        setText(newText+text.slice(1)); // printing it with rest excluding the first char by using slice\r\n        props.showAlert(\"Converted to Capitalize.\",\"Success\");\r\n\r\n\r\n    }\r\n    const handleCopy = () =>{\r\n        var text = document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Copied to clipboard.\",\"Success\");\r\n\r\n    }\r\n\r\n    const handleExtraSpaces = ()=>{\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Extra Spaces Removed.\",\"Success\");\r\n\r\n    }\r\n     const handleOnChange = (event)=>{\r\n        console.log(\"On Change.\");\r\n        setText(event.target.value);\r\n    }\r\n    const [text ,setText] = useState('');\r\n    return (\r\n        <>\r\n        <div className=\"container\">\r\n            <h1>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n                \r\n                <textarea className=\"form-control\" value={text} placeholder=\"Enter text here.\" onChange={handleOnChange} id=\"myBox\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary my-2 mx-2\" onClick={handleUpClick}>Convert to Uppercase </button>\r\n            <button className=\"btn btn-primary my-2 mx-2\" onClick={handleLoClick}>Convert to Lowercase </button>\r\n            <button className=\"btn btn-primary my-2 mx-2\" onClick={handleTrimClick}>Trim Text </button>\r\n            <button className=\"btn btn-primary my-2 mx-2\" onClick={capitalize}>Capitalize </button>\r\n            <button className=\"btn btn-primary my-2 mx-2\" onClick={handleCopy}>Copy Text </button>\r\n            <button className=\"btn btn-primary my-2 mx-2\" onClick={handleExtraSpaces}>Remove Extra Spaces </button>\r\n            <button className=\"btn btn-primary my-2 mx-2\" onClick={handleClearClick}>Clear Text </button>\r\n        </div>\r\n\r\n        <div className=\"container my-3\">\r\n            <h2>Your text Summary</h2>\r\n            <p>{text.split(\" \").length - 1} words and {text.length} characters</p>\r\n            <p>{0.008 * text.split(\" \").length} Minutes for Reading</p>\r\n            <h4>Preview</h4>\r\n            <p>{text.length>0?text:\"Enter something to Preview it here!\"}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","\r\nimport React from 'react'\r\n\r\nfunction Alert(props) {\r\n        const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n\r\n    return (\r\n        props.alert && <div >\r\n             <div className={`alert alert-${props.alert.type} alert-dismissible fade show `} role= \"alert\">\r\n                <strong >{capitalize(props.alert.type)} </strong> : {props.alert.msg}\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n// import About from './components/About';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\nconst showAlert = (message ,type)=>{\n  setAlert({\n    msg: message,\n    type: type \n  })\n  setTimeout(() => {\n    setAlert(null);\n  }, 1500);\n}\n\n  const toggleMode = ()=>{\n    if(mode==='light'){\n      setMode ('dark');\n      document.body.style.backgroundColor = 'black';\n      document.body.style.color = 'white';\n      showAlert(\"Dark Mode has been Enabled\",\"Success!\");\n      document.title = \"TextUtils - Dark Mode\";\n      // setInterval(() => {\n      //   document.title = \"TextUtils Is Amazing\";\n      // }, 2000);\n      //  setInterval(() => {\n      //   document.title = \"Install TextUtils Now\";\n      // },1500);\n\n\n    }\n    else{\n      setMode ('light');\n      document.body.style.backgroundColor = 'white'; \n      document.body.style.color = 'black'\n      showAlert(\"Light Mode has been Enabled\",\"Success!\");\n      document.title = \"TextUtils - Light Mode\"\n    }\n  }\n  return (\n  <>\n{/* <Router> */}\n\n\n <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode}/>\n\n {/* <Alert alert=\"Welcome To TextUtils ! Hope You Like it...\"/> */}\n <Alert alert={alert} />\n\n<div className=\"container my-3\">\n        \n {/* ---------------------------------------------------------------------------------------------------------- */}\n\n        \n        {/* <Switch> */}\n          {/* <Route exact path=\"/about\"> */}\n            {/* <About /> */}\n          {/* </Route> */}\n         \n          {/* <Route exact path=\"/\"> */}\n            <TextForm heading=\"Enter the text you want to analyze below .\" showAlert={showAlert}/>\n          {/* </Route> */}\n        {/* </Switch> */}\n       \n  \n {/* --------------------------------------------------------------------------------------------------------- */}\n</div>\n\n{/* </Router> */}\n</>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}